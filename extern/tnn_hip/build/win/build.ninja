# CMAKE generated file: DO NOT EDIT!
# Generated by "Ninja" Generator, CMake Version 3.30

# This file contains all the build statements describing the
# compilation DAG.

# =============================================================================
# Write statements declared in CMakeLists.txt:
# 
# Which is the root file.
# =============================================================================

# =============================================================================
# Project: tnn_hip
# Configurations: Debug
# =============================================================================

#############################################
# Minimal version of Ninja required by this file

ninja_required_version = 1.5


#############################################
# Set configuration variable for custom commands.

CONFIGURATION = Debug
# =============================================================================
# Include auxiliary files.


#############################################
# Include rules file.

include CMakeFiles/rules.ninja

# =============================================================================

#############################################
# Logical path to working directory; prefix for absolute paths.

cmake_ninja_workdir = F$:/git/Tnn-miner/extern/tnn_hip/build/win/
# =============================================================================
# Object build statements for EXECUTABLE target tnn_hip


#############################################
# Order-only phony target for tnn_hip

build cmake_object_order_depends_target_tnn_hip: phony || .

build CMakeFiles/tnn_hip.dir/src/crypto/hip/hello-world.hip.obj: HIP_COMPILER__tnn_hip_unscanned_Debug F$:/git/Tnn-miner/extern/tnn_hip/src/crypto/hip/hello-world.hip || cmake_object_order_depends_target_tnn_hip
  DEFINES = -D__HIP_ROCclr__=1
  DEP_FILE = CMakeFiles\tnn_hip.dir\src\crypto\hip\hello-world.hip.obj.d
  FLAGS = -g -O0 -g -Xclang -gcodeview --offload-arch=gfx906 -D_DEBUG -D_DLL -D_MT -Xclang --dependent-lib=msvcrtd -mllvm=-amdgpu-early-inline-all=true -mllvm=-amdgpu-function-calls=false
  OBJECT_DIR = CMakeFiles\tnn_hip.dir
  OBJECT_FILE_DIR = CMakeFiles\tnn_hip.dir\src\crypto\hip


# =============================================================================
# Link build statements for EXECUTABLE target tnn_hip


#############################################
# Link the executable tnn_hip.exe

build tnn_hip.exe: HIP_EXECUTABLE_LINKER__tnn_hip_Debug CMakeFiles/tnn_hip.dir/src/crypto/hip/hello-world.hip.obj | C$:/Program$ Files/AMD/ROCm/6.1/lib/amdhip64.lib
  FLAGS = -g -O0 -g -Xclang -gcodeview --offload-arch=gfx906 -D_DEBUG -D_DLL -D_MT -Xclang --dependent-lib=msvcrtd
  LINK_FLAGS = -Xlinker /subsystem:console  --hip-link --rtlib=compiler-rt -fuse-ld=lld-link
  LINK_LIBRARIES = "C:/Program Files/AMD/ROCm/6.1/lib/amdhip64.lib"  -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32 -loldnames
  OBJECT_DIR = CMakeFiles\tnn_hip.dir
  POST_BUILD = cd .
  PRE_LINK = cd .
  TARGET_FILE = tnn_hip.exe
  TARGET_IMPLIB = tnn_hip.lib
  TARGET_PDB = tnn_hip.exe.dbg


#############################################
# Utility command for edit_cache

build CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = C:\WINDOWS\system32\cmd.exe /C "cd /D F:\git\Tnn-miner\extern\tnn_hip\build\win && C:\mingw64\bin\cmake.exe -E echo "No interactive CMake dialog available.""
  DESC = No interactive CMake dialog available...
  restat = 1

build edit_cache: phony CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = C:\WINDOWS\system32\cmd.exe /C "cd /D F:\git\Tnn-miner\extern\tnn_hip\build\win && C:\mingw64\bin\cmake.exe --regenerate-during-build -SF:\git\Tnn-miner\extern\tnn_hip -BF:\git\Tnn-miner\extern\tnn_hip\build\win"
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build rebuild_cache: phony CMakeFiles/rebuild_cache.util

# =============================================================================
# Target aliases.

build tnn_hip: phony tnn_hip.exe

# =============================================================================
# Folder targets.

# =============================================================================

#############################################
# Folder: F:/git/Tnn-miner/extern/tnn_hip/build/win

build all: phony tnn_hip.exe

# =============================================================================
# Built-in targets


#############################################
# Re-run CMake if any of its inputs changed.

build build.ninja: RERUN_CMAKE | C$:/Program$ Files/AMD/ROCm/6.1/lib/cmake/hip-lang/hip-lang-config-version.cmake C$:/Program$ Files/AMD/ROCm/6.1/lib/cmake/hip-lang/hip-lang-config.cmake C$:/Program$ Files/AMD/ROCm/6.1/lib/cmake/hip-lang/hip-lang-targets-release.cmake C$:/Program$ Files/AMD/ROCm/6.1/lib/cmake/hip-lang/hip-lang-targets.cmake C$:/mingw64/share/cmake-3.30/Modules/CMakeCommonLanguageInclude.cmake C$:/mingw64/share/cmake-3.30/Modules/CMakeFindDependencyMacro.cmake C$:/mingw64/share/cmake-3.30/Modules/CMakeGenericSystem.cmake C$:/mingw64/share/cmake-3.30/Modules/CMakeHIPInformation.cmake C$:/mingw64/share/cmake-3.30/Modules/CMakeInitializeConfigs.cmake C$:/mingw64/share/cmake-3.30/Modules/CMakeRCInformation.cmake C$:/mingw64/share/cmake-3.30/Modules/CMakeSystemSpecificInformation.cmake C$:/mingw64/share/cmake-3.30/Modules/CMakeSystemSpecificInitialize.cmake C$:/mingw64/share/cmake-3.30/Modules/Compiler/CMakeCommonCompilerMacros.cmake C$:/mingw64/share/cmake-3.30/Modules/Compiler/Clang-HIP.cmake C$:/mingw64/share/cmake-3.30/Modules/Compiler/Clang.cmake C$:/mingw64/share/cmake-3.30/Modules/Compiler/GNU.cmake C$:/mingw64/share/cmake-3.30/Modules/Platform/Windows-Clang-HIP.cmake C$:/mingw64/share/cmake-3.30/Modules/Platform/Windows-Clang.cmake C$:/mingw64/share/cmake-3.30/Modules/Platform/Windows-Initialize.cmake C$:/mingw64/share/cmake-3.30/Modules/Platform/Windows.cmake C$:/mingw64/share/cmake-3.30/Modules/Platform/WindowsPaths.cmake CMakeCache.txt CMakeFiles/3.30.0/CMakeHIPCompiler.cmake CMakeFiles/3.30.0/CMakeRCCompiler.cmake CMakeFiles/3.30.0/CMakeSystem.cmake F$:/git/Tnn-miner/extern/tnn_hip/CMakeLists.txt
  pool = console


#############################################
# A missing CMake input file is not an error.

build C$:/Program$ Files/AMD/ROCm/6.1/lib/cmake/hip-lang/hip-lang-config-version.cmake C$:/Program$ Files/AMD/ROCm/6.1/lib/cmake/hip-lang/hip-lang-config.cmake C$:/Program$ Files/AMD/ROCm/6.1/lib/cmake/hip-lang/hip-lang-targets-release.cmake C$:/Program$ Files/AMD/ROCm/6.1/lib/cmake/hip-lang/hip-lang-targets.cmake C$:/mingw64/share/cmake-3.30/Modules/CMakeCommonLanguageInclude.cmake C$:/mingw64/share/cmake-3.30/Modules/CMakeFindDependencyMacro.cmake C$:/mingw64/share/cmake-3.30/Modules/CMakeGenericSystem.cmake C$:/mingw64/share/cmake-3.30/Modules/CMakeHIPInformation.cmake C$:/mingw64/share/cmake-3.30/Modules/CMakeInitializeConfigs.cmake C$:/mingw64/share/cmake-3.30/Modules/CMakeRCInformation.cmake C$:/mingw64/share/cmake-3.30/Modules/CMakeSystemSpecificInformation.cmake C$:/mingw64/share/cmake-3.30/Modules/CMakeSystemSpecificInitialize.cmake C$:/mingw64/share/cmake-3.30/Modules/Compiler/CMakeCommonCompilerMacros.cmake C$:/mingw64/share/cmake-3.30/Modules/Compiler/Clang-HIP.cmake C$:/mingw64/share/cmake-3.30/Modules/Compiler/Clang.cmake C$:/mingw64/share/cmake-3.30/Modules/Compiler/GNU.cmake C$:/mingw64/share/cmake-3.30/Modules/Platform/Windows-Clang-HIP.cmake C$:/mingw64/share/cmake-3.30/Modules/Platform/Windows-Clang.cmake C$:/mingw64/share/cmake-3.30/Modules/Platform/Windows-Initialize.cmake C$:/mingw64/share/cmake-3.30/Modules/Platform/Windows.cmake C$:/mingw64/share/cmake-3.30/Modules/Platform/WindowsPaths.cmake CMakeCache.txt CMakeFiles/3.30.0/CMakeHIPCompiler.cmake CMakeFiles/3.30.0/CMakeRCCompiler.cmake CMakeFiles/3.30.0/CMakeSystem.cmake F$:/git/Tnn-miner/extern/tnn_hip/CMakeLists.txt: phony


#############################################
# Clean all the built files.

build clean: CLEAN


#############################################
# Print all primary targets available.

build help: HELP


#############################################
# Make the all target the default.

default all
