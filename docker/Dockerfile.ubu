# syntax=docker/dockerfile:1.4

ARG  IMAGE_VERSION=docker.io/dirkerdero/tnn-miner-base:latest
FROM ${IMAGE_VERSION} AS base
#FROM docker.io/dirkerdero/tnn-miner-base:latest AS base
ARG REGRESS=0

RUN if [ -f /etc/apt/apt.conf.d/docker-clean ]; then rm -f /etc/apt/apt.conf.d/docker-clean; fi \
    && echo 'Binary::apt::APT::Keep-Downloaded-Packages "true";' > /etc/apt/apt.conf.d/keep-cache


# Set environment variable to avoid interactive prompts
ENV DEBIAN_FRONTEND=noninteractive
ENV TNN_REGRESS=$REGRESS

WORKDIR /src

COPY ./scripts/prereqs.sh ./scripts/prereqs.sh
RUN chmod +x ./scripts/prereqs.sh
RUN --mount=target=/var/lib/apt/lists,type=cache,sharing=locked \
    --mount=target=/var/cache/apt,type=cache,sharing=locked \
    ./scripts/prereqs.sh

FROM base AS build
ARG  CMAKE_ARGS=
ARG  PACKAGE_VERSION=0.0.1
ARG  TARGZ_FILE
RUN pwd
RUN ls -la .
RUN ls -la ./scripts/

COPY . .

RUN ls -la .

RUN --mount=type=cache,target=/src/_deps mkdir ./build && cd ./build && cmake $CMAKE_ARGS -DTNN_VERSION=$PACKAGE_VERSION ..
RUN --mount=type=cache,target=/src/_deps cd ./build && make -j$(nproc)

RUN git diff -p
RUN if [ "$REGRESS" = "1" ]; then gdb --return-child-result --batch -ex "run" -ex "bt" -ex "cont" -ex "exit" --args ./build/bin/tnn-miner-cpu --quiet --test-dero; fi
RUN if [ "$REGRESS" = "1" ]; then gdb --return-child-result --batch -ex "run" -ex "bt" -ex "cont" -ex "exit" --args ./build/bin/tnn-miner-cpu --quiet --test-spectre; fi
RUN if [ "$REGRESS" = "1" ]; then gdb --return-child-result --batch -ex "run" -ex "bt" -ex "cont" -ex "exit" --args ./build/bin/tnn-miner-cpu --quiet --test-xelis; fi

RUN mv ./build/bin/tnn-miner-* ./
RUN ls -la ./
RUN tar -czvf ${TARGZ_FILE} ./tnn-miner*
RUN md5sum ./${TARGZ_FILE}

FROM scratch
ARG  PACKAGE_VERSION
ARG  TARGZ_FILE
COPY --from=build /src/${TARGZ_FILE} /
