# syntax=docker/dockerfile:1.4

ARG  IMAGE_VERSION=ubuntu:noble
FROM ${IMAGE_VERSION} AS build
ARG  IMAGE_VERSION

# Set environment variable to avoid interactive prompts
ENV DEBIAN_FRONTEND=noninteractive

WORKDIR /src

#COPY ./scripts/prereqs.sh ./scripts/prereqs.sh
#RUN chmod +x ./scripts/prereqs.sh && ./scripts/prereqs.sh

RUN apt update && apt upgrade -y && apt install \
    git \
    cmake \
    clang-14 \
    clang-15 \
    libssl-dev \
    lsb-release \
    wget \
    software-properties-common \
    gnupg \
    zstd \
    -y

RUN wget https://apt.llvm.org/llvm.sh
RUN chmod +x llvm.sh
RUN ./llvm.sh 18
RUN ./llvm.sh 20

RUN wget https://github.com/Jake-Shadle/xwin/releases/download/0.6.6-rc.2/xwin-0.6.6-rc.2-x86_64-unknown-linux-musl.tar.gz
RUN tar -xvf ./xwin-0.6.6-rc.2-x86_64-unknown-linux-musl.tar.gz
RUN chmod +x ./xwin-0.6.6-rc.2-x86_64-unknown-linux-musl/xwin
RUN ./xwin-0.6.6-rc.2-x86_64-unknown-linux-musl/xwin --accept-license splat --preserve-ms-arch-notation --output "/src/winsdk"
RUN ls -la ./xwin-0.6.6-rc.2-x86_64-unknown-linux-musl/

RUN wget https://ftp.osuosl.org/pub/msys2/mingw/clang64/mingw-w64-clang-x86_64-openssl-3.4.1-1-any.pkg.tar.zst
RUN tar --zstd -xf mingw-w64-clang-x86_64-openssl-3.4.1-1-any.pkg.tar.zst

RUN wget https://mirror.msys2.org/mingw/clang64/mingw-w64-clang-x86_64-boost-1.87.0-2-any.pkg.tar.zst
RUN tar --zstd -xf mingw-w64-clang-x86_64-boost-1.87.0-2-any.pkg.tar.zst

RUN wget https://mirror.msys2.org/mingw/clang64/mingw-w64-clang-x86_64-libsodium-1.0.20-1-any.pkg.tar.zst
RUN tar --zstd -xf mingw-w64-clang-x86_64-libsodium-1.0.20-1-any.pkg.tar.zst
#VOLUME /src/.cache/
#COPY . .
#COPY --link=true ./.cache/ /src/.cache/
#RUN --mount=type=cache,target=/src/.cache/,sharing=locked
RUN pwd
RUN ls -la /src/clang64/lib
#RUN ls -la ./scripts/

#COPY ./scripts/create-static-libs.sh ./scripts/
COPY ./cmake/ ./cmake/
COPY ./extern/ ./extern/
COPY ./include/ ./include/
COPY ./lib/ ./lib/
COPY ./scripts/ ./scripts/
COPY ./src/ ./src/
COPY ./CMakeLists.txt .
#RUN ls -la /src/winsdk/sdk/Include/um | grep -i "Shobjidl.h"
#RUN apt install clang-tools-18 -y

RUN mkdir build && cd build && cmake -DWIN_CROSS=1 -DCMAKE_C_COMPILER=clang-18 -DCMAKE_CXX_COMPILER=clang++-18 .. && cmake --build .
RUN cd build && ls -la bin/*
RUN cd build && cmake --install .
#RUN ./scripts/create-static-libs.sh ci
#RUN ./scripts/create-static-libs.sh WIN_CROSS

RUN ls -la ./export/

FROM scratch
COPY --from=build /src/export/ /
